{"version":3,"sources":["components/Sparkles/Sparkle.jsx","components/Sparkles/index.jsx","star.svg","App.jsx","index.js"],"names":["Sparkle","position","sprite","color","size","flickerDuration","type","src","alt","className","style","width","height","transform","Math","random","animationName","animationDuration","toFixed","animationTimingFunction","animationDirection","animationIterationCount","animationDelay","top","left","background","Sparkles","sparkleCount","sparkleSize","overflow","sparklesContainer","useRef","useState","refExists","setRefExists","getRandPos","randInt","axis","current","clientHeight","clientWidth","useEffect","ref","display","flexDirection","alignContent","flexWrap","pointerEvents","Array","from","map","x","index","defaultProps","App","orientation","setOrientation","numSparkles","setNumSparkles","useSprite","setUseSprite","speed","setSpeed","setSize","fontSize","Star","value","id","name","defaultChecked","onClick","htmlFor","marginRight","min","max","onChange","e","parseInt","target","step","parseFloat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ff98a63.chunk.js","sourcesContent":["import React from 'react';\n\nconst Sparkle = ({ position, sprite, color, size, flickerDuration, type }) =>\n  !sprite ? (\n    <div\n      className=\"flicker-sparkle\"\n      style={{\n        position: type === 'random' ? 'absolute' : 'relative',\n        width: size.width,\n        height: size.height,\n        background: color ? color : '#f4ea6e',\n        transform: `rotate(${Math.random() * 360}deg) ${type === 'random' ? 'translate(-50%, -50%)' : null}`,\n        animationName: 'flicker',\n        animationDuration: `${(Math.random() + flickerDuration).toFixed(2)}s`,\n        animationTimingFunction: 'ease',\n        animationDirection: 'alternate',\n        animationIterationCount: 'infinite',\n        animationDelay: `${Math.random().toFixed(2)}s`,\n        top: position.top,\n        left: position.left,\n      }}\n    />\n  ) : (\n    <img\n      src={sprite}\n      alt=\"sprite\"\n      className=\"flicker-sparkle\"\n      style={{\n        position: type === 'random' ? 'absolute' : 'relative',\n        width: size.width,\n        height: size.height,\n        transform: `rotate(${Math.random() * 360}deg) ${type === 'random' ? 'translate(-50%, -50%)' : ''}`,\n        animationName: 'flicker',\n        animationDuration: `${(Math.random() + flickerDuration).toFixed(2)}s`,\n        animationTimingFunction: 'ease',\n        animationDirection: 'alternate',\n        animationIterationCount: 'infinite',\n        animationDelay: `${Math.random().toFixed(2)}s`,\n        top: position.top,\n        left: position.left,\n      }}\n    />\n  );\n\nexport default Sparkle;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Sparkle from './Sparkle';\n\nconst Sparkles = ({\n  sparkleCount,\n  sparkleSize,\n  color,\n  flickerDuration,\n  width,\n  height,\n  sprite,\n  type,\n  overflow,\n  style,\n}) => {\n  const sparklesContainer = useRef();\n  const [refExists, setRefExists] = useState(false);\n\n  const getRandPos = (randInt, axis) => {\n    return axis === 'y'\n      ? `${randInt * sparklesContainer.current.clientHeight}px`\n      : `${randInt * sparklesContainer.current.clientWidth}px`;\n  };\n\n  useEffect(() => {\n    sparklesContainer.current ? setRefExists(true) : setRefExists(false);\n  }, [sparklesContainer]);\n  return (\n    <div\n      ref={sparklesContainer}\n      style={{\n        width: width,\n        height: height,\n        position: 'relative',\n        display: type === 'random' ? 'block' : 'flex',\n        flexDirection: type === 'vertical' ? 'column' : 'row',\n        alignContent: 'flex-start',\n        flexWrap: 'wrap',\n        pointerEvents: 'none',\n        overflow,\n        ...style,\n      }}\n    >\n      {Array.from(Array(sparkleCount)).map((x, index) => (\n        <Sparkle\n          sprite={sprite}\n          size={sparkleSize}\n          color={color}\n          flickerDuration={flickerDuration}\n          key={index}\n          type={type}\n          position={{\n            top:\n              type === 'random' && refExists\n                ? getRandPos(Math.random(), 'y')\n                : 'auto',\n            left:\n              type === 'random' && refExists\n                ? getRandPos(Math.random(), 'x')\n                : 'auto',\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nSparkles.defaultProps = {\n  sparkleCount: 1,\n  sparkleSize: { width: '20px', height: '20px' },\n  color: '#f4ea6e',\n  flickerDuration: 0.5,\n  width: '200px',\n  height: '200px',\n  type: 'random',\n  overflow: 'visible',\n};\n\nSparkles.propTypes = {\n  sparkleCount: PropTypes.number,\n  sparkleSize: PropTypes.object,\n  color: PropTypes.string,\n  flickerDuration: PropTypes.number,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  sprite: PropTypes.string,\n  type: PropTypes.string,\n  overflow: PropTypes.string,\n  style: PropTypes.object,\n};\nexport default Sparkles;\n","export default __webpack_public_path__ + \"static/media/star.2318d697.svg\";","import Sparkles from './components/Sparkles';\nimport './styles/styles.css';\nimport Star from './star.svg';\nimport { useState } from 'react';\n\nfunction App() {\n  const [orientation, setOrientation] = useState('random');\n  const [numSparkles, setNumSparkles] = useState(1);\n  const [useSprite, setUseSprite] = useState(true);\n  const [speed, setSpeed] = useState(0);\n  const [size, setSize] = useState(10);\n  const handleChange = (e) => {\n    setNumSparkles(parseInt(e.target.value));\n  };\n  return (\n    <div\n      className=\"App\"\n      style={{\n        background: '#000',\n        width: '100vw',\n        height: '100vh',\n        color: 'white',\n        fontSize: '40px',\n      }}\n    >\n      <Sparkles\n        sparkleCount={numSparkles}\n        flickerDuration={speed}\n        type={orientation}\n        width=\"300px\"\n        height=\"300px\"\n        sparkleSize={{ width: size, height: size }}\n        color=\"goldenrod\"\n        overflow=\"hidden\"\n        sprite={useSprite && Star}\n      />\n      <form>\n        <input\n          type=\"radio\"\n          value=\"random\"\n          id=\"random\"\n          name=\"orientation\"\n          defaultChecked\n          onClick={() => setOrientation('random')}\n        />\n        <label\n          style={{\n            color: orientation === 'random' ? 'green' : 'white',\n          }}\n          htmlFor=\"random\"\n        >\n          random\n        </label>\n        <input\n          type=\"radio\"\n          value=\"vertical\"\n          id=\"vertical\"\n          name=\"orientation\"\n          onClick={() => setOrientation('vertical')}\n        />\n        <label\n          style={{\n            color: orientation === 'vertical' ? 'green' : 'white',\n          }}\n          htmlFor=\"vertical\"\n        >\n          vertical\n        </label>\n        <input\n          type=\"radio\"\n          id=\"horizontal\"\n          value=\"horizontal\"\n          name=\"orientation\"\n          onClick={() => setOrientation('horizontal')}\n        />\n        <label\n          style={{\n            color: orientation === 'horizontal' ? 'green' : 'white',\n          }}\n          htmlFor=\"horizontal\"\n        >\n          horizontal\n        </label>\n        <div style={{ height: '20px' }} />\n        <label\n          htmlFor=\"numSparkles\"\n          style={{\n            marginRight: '50px',\n            width: '350px',\n            display: 'inline-block',\n          }}\n        >\n          Sparkle Count: <span style={{ color: 'green' }}>{numSparkles}</span>\n        </label>\n        <input\n          type=\"range\"\n          name=\"numSparkles\"\n          id=\"numSparkles\"\n          min={0}\n          max={2000}\n          onChange={handleChange}\n        />\n        <div style={{ height: '20px' }} />\n        <label\n          htmlFor=\"speed\"\n          style={{\n            marginRight: '50px',\n            width: '350px',\n            display: 'inline-block',\n          }}\n        >\n          Flicker Duration: <span style={{ color: 'green' }}>{speed}</span>\n        </label>\n        <input\n          type=\"range\"\n          name=\"speed\"\n          id=\"speed\"\n          min={0.1}\n          max={5}\n          value={speed}\n          step={0.1}\n          onChange={(e) => setSpeed(parseFloat(e.target.value))}\n        />\n        <div style={{ height: '20px' }} />\n\n        <label\n          htmlFor=\"speed\"\n          style={{\n            marginRight: '50px',\n            width: '350px',\n            display: 'inline-block',\n          }}\n        >\n          Sparkle Size: <span style={{ color: 'green' }}>{size}</span>\n        </label>\n        <input\n          type=\"range\"\n          name=\"speed\"\n          id=\"speed\"\n          min={1}\n          max={100}\n          value={size}\n          onChange={(e) => setSize(parseInt(e.target.value))}\n        />\n      </form>\n      <button onClick={() => setUseSprite(!useSprite)}>Toggle sprite</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}